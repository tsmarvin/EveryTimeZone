name: Update Test Statistics

on:
  pull_request:
    types: [closed]
    branches: [ main ]

jobs:
  update-test-stats:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      actions: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Run tests and store statistics
      id: test-stats
      run: |
        # Run vitest and capture output
        npm run test > test-output.txt 2>&1 || true
        
        # Extract test statistics from output
        TOTAL_TESTS=$(grep -E "Tests.*[0-9]+ passed" test-output.txt | tail -1 | sed -E 's/.*Tests[[:space:]]+([0-9]+) passed.*/\1/')
        TEST_FILES=$(grep -E "Test Files.*[0-9]+ passed" test-output.txt | tail -1 | sed -E 's/.*Test Files[[:space:]]+([0-9]+) passed.*/\1/')
        
        # Extract from vitest output if first attempt failed
        if [ -z "$TOTAL_TESTS" ] || [ "$TOTAL_TESTS" = "" ]; then
          VITEST_OUTPUT=$(npx vitest run --reporter=basic 2>&1 || true)
          TOTAL_TESTS=$(echo "$VITEST_OUTPUT" | grep -E "Tests.*[0-9]+ passed" | tail -1 | sed -E 's/.*Tests[[:space:]]+([0-9]+) passed.*/\1/')
          TEST_FILES=$(echo "$VITEST_OUTPUT" | grep -E "Test Files.*[0-9]+ passed" | tail -1 | sed -E 's/.*Test Files[[:space:]]+([0-9]+) passed.*/\1/')
        fi
        
        # If extraction still fails, error out instead of using defaults
        if [ -z "$TOTAL_TESTS" ] || [ "$TOTAL_TESTS" = "" ]; then
          echo "Error: Could not extract test count from vitest output"
          exit 1
        fi
        if [ -z "$TEST_FILES" ] || [ "$TEST_FILES" = "" ]; then
          echo "Error: Could not extract test file count from vitest output"
          exit 1
        fi
        
        echo "total_tests=$TOTAL_TESTS" >> $GITHUB_OUTPUT
        echo "test_files=$TEST_FILES" >> $GITHUB_OUTPUT
        echo "Detected: $TOTAL_TESTS tests across $TEST_FILES files"
        
        # Store statistics as workflow artifact for potential future use
        echo "{\"total_tests\": $TOTAL_TESTS, \"test_files\": $TEST_FILES, \"updated\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"}" > test-stats.json
    
    - name: Upload test statistics
      uses: actions/upload-artifact@v4
      with:
        name: test-statistics
        path: test-stats.json
        retention-days: 90