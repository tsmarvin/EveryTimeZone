name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for gitversion
      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4
        with:
          versionSpec: '6.x.x'
          
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
        env:
          GITVERSION_SEMVER: ${{ steps.gitversion.outputs.semVer }}
          GITVERSION_FULLSEMVER: ${{ steps.gitversion.outputs.fullSemVer }}
          GITVERSION_INFORMATIONALVERSION: ${{ steps.gitversion.outputs.informationalVersion }}
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Cleanup develop sub-sites after main deployment
        if: github.ref == 'refs/heads/main'
        run: |
          # This cleanup is necessary because GitHub Pages deployment only replaces the root directory
          # contents, not sub-directories. Without this cleanup, old test-PR* directories would
          # persist indefinitely on the gh-pages branch, creating stale preview sites.
          echo "::notice::Cleaning up develop branch preview sites after main deployment"
          
          # Checkout gh-pages to clean up sub-directories
          git clone --single-branch --branch gh-pages https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git gh-pages-cleanup
          cd gh-pages-cleanup
          
          # Remove all test-PR* directories (and legacy test-commit-* if any exist)
          echo "::notice::Removing test-PR* directories..."
          find . -maxdepth 1 -type d -name "test-PR*" -exec rm -rf {} \; 2>/dev/null || true
          find . -maxdepth 1 -type d -name "test-commit-*" -exec rm -rf {} \; 2>/dev/null || true
          
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Commit cleanup if there are changes
          if [[ -n $(git status --porcelain) ]]; then
            git add -A
            git commit -m "Cleanup: Remove develop branch sub-sites after main deployment"
            git push origin gh-pages
            echo "::notice::Cleaned up develop branch sub-sites"
          else
            echo "::notice::No develop branch sub-sites to clean up"
          fi
          
          cd ..
          rm -rf gh-pages-cleanup